# -*- coding: utf-8 -*-
"""fashion_mnist_pattern_recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TRsWf50eArDAuI4j9oUBpO-3Tf41wkw8
"""

import numpy as np
import matplotlib.pyplot as plt
import random
import tensorflow as tf
import keras
from tensorflow import keras

fashion_mnist = keras.datasets.fashion_mnist
(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

train_images  = train_images / 255.0
test_images = test_images / 255.0

plt.figure(figsize=(10,10))
for i in range(16):
    plt.subplot(4,4,i+1)
    plt.xticks([])
    plt.yticks([])
    plt.grid(False)
    plt.imshow(train_images[i], cmap=plt.cm.binary)
    plt.title("Image label is: {}".format(train_labels[i]))
plt.show()

x_train = train_images.reshape(-1,28,28,1)
x_test = test_images.reshape(-1,28,28,1)

early_stop = keras.callbacks.EarlyStopping(monitor='val_loss', patience=3)

model = keras.Sequential([
    keras.layers.Conv2D(filters=128, kernel_size=(3,3), activation='relu', input_shape=(28,28,1)),
    keras.layers.MaxPooling2D(pool_size=(2,2)),
    keras.layers.Conv2D(filters=128, kernel_size=(3,3), activation='relu'),
    keras.layers.MaxPooling2D(pool_size=(2,2)),
    keras.layers.Flatten(),
    keras.layers.Dense(32, activation='relu'),
    keras.layers.Dense(10, activation='softmax')
])

optimizer = keras.optimizers.Adam(learning_rate=0.001)
model.compile(optimizer=optimizer, loss='sparse_categorical_crossentropy', metrics=['accuracy'])

history = model.fit(x_train, train_labels,
                    epochs=10, validation_split=0.2, callbacks=[early_stop])

model.summary()

score = model.evaluate(x_test, test_labels)
print(f'Test loss: {score[0] * 100:.2f}%')
print(f'Test accuracy: {score[1] * 100:.2f}%')